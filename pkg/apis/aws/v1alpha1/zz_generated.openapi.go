// +build !ignore_autogenerated

// This file was autogenerated by openapi-gen. Do not edit it manually!

package v1alpha1

import (
	spec "github.com/go-openapi/spec"
	common "k8s.io/kube-openapi/pkg/common"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"github.com/appvia/eks-operator/pkg/apis/aws/v1alpha1.AWSCredential":       schema_pkg_apis_aws_v1alpha1_AWSCredential(ref),
		"github.com/appvia/eks-operator/pkg/apis/aws/v1alpha1.AWSCredentialSpec":   schema_pkg_apis_aws_v1alpha1_AWSCredentialSpec(ref),
		"github.com/appvia/eks-operator/pkg/apis/aws/v1alpha1.AWSCredentialStatus": schema_pkg_apis_aws_v1alpha1_AWSCredentialStatus(ref),
		"github.com/appvia/eks-operator/pkg/apis/aws/v1alpha1.AWSToken":            schema_pkg_apis_aws_v1alpha1_AWSToken(ref),
		"github.com/appvia/eks-operator/pkg/apis/aws/v1alpha1.AWSTokenSpec":        schema_pkg_apis_aws_v1alpha1_AWSTokenSpec(ref),
		"github.com/appvia/eks-operator/pkg/apis/aws/v1alpha1.AWSTokenStatus":      schema_pkg_apis_aws_v1alpha1_AWSTokenStatus(ref),
		"github.com/appvia/eks-operator/pkg/apis/aws/v1alpha1.EKSCluster":          schema_pkg_apis_aws_v1alpha1_EKSCluster(ref),
		"github.com/appvia/eks-operator/pkg/apis/aws/v1alpha1.EKSClusterSpec":      schema_pkg_apis_aws_v1alpha1_EKSClusterSpec(ref),
		"github.com/appvia/eks-operator/pkg/apis/aws/v1alpha1.EKSClusterStatus":    schema_pkg_apis_aws_v1alpha1_EKSClusterStatus(ref),
	}
}

func schema_pkg_apis_aws_v1alpha1_AWSCredential(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "AWSCredential is the Schema for the awscredentials API",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/appvia/eks-operator/pkg/apis/aws/v1alpha1.AWSCredentialSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/appvia/eks-operator/pkg/apis/aws/v1alpha1.AWSCredentialStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/appvia/eks-operator/pkg/apis/aws/v1alpha1.AWSCredentialSpec", "github.com/appvia/eks-operator/pkg/apis/aws/v1alpha1.AWSCredentialStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_aws_v1alpha1_AWSCredentialSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "AWSCredentialSpec defines the desired state of AWSCredential",
				Type:        []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_aws_v1alpha1_AWSCredentialStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "AWSCredentialStatus defines the observed state of AWSCredential",
				Type:        []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_aws_v1alpha1_AWSToken(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "AWSToken is the Schema for the awstokens API",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/appvia/eks-operator/pkg/apis/aws/v1alpha1.AWSTokenSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/appvia/eks-operator/pkg/apis/aws/v1alpha1.AWSTokenStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/appvia/eks-operator/pkg/apis/aws/v1alpha1.AWSTokenSpec", "github.com/appvia/eks-operator/pkg/apis/aws/v1alpha1.AWSTokenStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_aws_v1alpha1_AWSTokenSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "AWSTokenSpec defines the desired state of AWSToken",
				Type:        []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_aws_v1alpha1_AWSTokenStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "AWSTokenStatus defines the observed state of AWSToken",
				Type:        []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_aws_v1alpha1_EKSCluster(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "EKSCluster is the Schema for the eksclusters API",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/appvia/eks-operator/pkg/apis/aws/v1alpha1.EKSClusterSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/appvia/eks-operator/pkg/apis/aws/v1alpha1.EKSClusterStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/appvia/eks-operator/pkg/apis/aws/v1alpha1.EKSClusterSpec", "github.com/appvia/eks-operator/pkg/apis/aws/v1alpha1.EKSClusterStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_aws_v1alpha1_EKSClusterSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "EKSClusterSpec defines the desired state of EKSCluster",
				Type:        []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_aws_v1alpha1_EKSClusterStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "EKSClusterStatus defines the observed state of EKSCluster",
				Type:        []string{"object"},
			},
		},
	}
}
